{"version":3,"file":"component---src-pages-index-2-js-dd6818be424e23dc4bad.js","mappings":"mMAyBkBA,E,OAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,YAAaR,EAAMS,QAAQ,QAyE/B,UArEkB,WAIcC,EAAAA,UAJR,IAuBhBC,EAvBgB,YAwBpB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKC,MAAQ,CAAC,CAAEC,GAAI,EAAGC,KAAM,cAC7BC,MAAM,EAAKH,OAJM,GAxBC,uCA+BpBI,SAAA,WAEEC,KAAKC,SAASD,KAAKL,MAAMO,OAAO,CAC9B,CAAEN,GAAI,EAAGC,KAAM,oBAlCC,EAsCpBM,gBAAA,WACE,MAAO,CACL,CAAEP,GAAI,EAAGC,KAAM,eAxCC,EA4CpBO,OAAA,WAEE,OACE,2BACI,0BAAKJ,KAAKL,MAAMU,SAAhB,KACA,0BAAQC,QAASN,KAAKD,UAAtB,mBAjDY,GAuBKP,EAAAA,WAwC3B,OACE,gBAACC,EAAD","sources":["webpack://gatsby-material-typescript-starter/./src/pages/index-2.js"],"sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport Button from '@material-ui/core/Button'\n\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport Box from '@material-ui/core/Box'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}))\n\nconst IndexPage = () => {\n\n  // https://stackoverflow.com/questions/36651583/dynamically-add-child-components-in-react\n\n  class SampleComponent extends React.Component {\n    constructor(props) {\n      super(props)\n    }\n\n\n    render() {\n\n      return (\n        <div>\n          <h1>hej </h1>\n          {\n            this.props.children\n          }\n        </div>\n      )\n    }\n  }\n\n  class AppComponent extends React.Component {\n    constructor(props) {\n      super(props)\n      //this.setState([{ id: 1, name: \"Some Name\" }])\n      this.state = [{ id: 1, name: \"Some Name\" }];\n      alert(this.state)\n    }\n\n    addChild() {\n      // State change will cause component re-render\n      this.setState(this.state.concat([\n        { id: 2, name: \"Another Name\" }\n      ]))\n    }\n\n    getInitialState() {\n      return [\n        { id: 1, name: \"Some Name\" }\n      ]\n    }\n\n    render() {\n\n      return (\n        <div>\n            <h1>{this.state.children} </h1>\n            <button onClick={this.addChild}>Add component</button>\n\n        </div>\n    );\n    }\n\n\n\n  }\n\n\n\n  //this.addChild = this.addChild.bind(this);\n\n  return (\n    <AppComponent />\n\n\n  )\n}\nexport default IndexPage"],"names":["makeStyles","theme","root","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","React","AppComponent","props","state","id","name","alert","addChild","this","setState","concat","getInitialState","render","children","onClick"],"sourceRoot":""}